---
apiVersion: v1
kind: List
metadata:
  name: azuredisk-csi-driver
  namespace: kube-system
  annotations:
    version: 1.4.0
items:
  - apiVersion: v1
    data:
      cloud-config: "{{{cloud-config}}}"
    kind: Secret
    metadata:
      name: azure-cloud-provider
      namespace: kube-system
    type: Opaque
  - apiVersion: storage.k8s.io/v1
    kind: CSIDriver
    metadata:
      name: disk.csi.azure.com
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
    spec:
      attachRequired: true
      podInfoOnMount: false
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: csi-azuredisk-controller-sa
      namespace: kube-system
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: csi-azuredisk-node-sa
      namespace: kube-system
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-external-provisioner-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
    rules:
      - apiGroups: [""]
        resources: ["persistentvolumes"]
        verbs: ["get", "list", "watch", "create", "delete"]
      - apiGroups: [""]
        resources: ["persistentvolumeclaims"]
        verbs: ["get", "list", "watch", "update"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["storageclasses"]
        verbs: ["get", "list", "watch"]
      - apiGroups: [""]
        resources: ["events"]
        verbs: ["get", "list", "watch", "create", "update", "patch"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["csinodes"]
        verbs: ["get", "list", "watch"]
      - apiGroups: [""]
        resources: ["nodes"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["coordination.k8s.io"]
        resources: ["leases"]
        verbs: ["get", "list", "watch", "create", "update", "patch"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshots"]
        verbs: ["get", "list"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshotcontents"]
        verbs: ["get", "list"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-csi-provisioner-binding
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-controller-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: azuredisk-external-provisioner-role
      apiGroup: rbac.authorization.k8s.io
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-external-attacher-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
    rules:
      - apiGroups: [""]
        resources: ["persistentvolumes"]
        verbs: ["get", "list", "watch", "update"]
      - apiGroups: [""]
        resources: ["nodes"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["csi.storage.k8s.io"]
        resources: ["csinodeinfos"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["volumeattachments"]
        verbs: ["get", "list", "watch", "update", "patch"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["volumeattachments/status"]
        verbs: ["get", "list", "watch", "update", "patch"]
      - apiGroups: ["coordination.k8s.io"]
        resources: ["leases"]
        verbs: ["get", "list", "watch", "create", "update", "patch"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-csi-attacher-binding
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-controller-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: azuredisk-external-attacher-role
      apiGroup: rbac.authorization.k8s.io
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-external-snapshotter-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
    rules:
      - apiGroups: [""]
        resources: ["events"]
        verbs: ["list", "watch", "create", "update", "patch"]
      - apiGroups: [""]
        resources: ["secrets"]
        verbs: ["get", "list"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshotclasses"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshotcontents"]
        verbs: ["create", "get", "list", "watch", "update", "delete"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshotcontents/status"]
        verbs: ["update"]
      - apiGroups: ["apiextensions.k8s.io"]
        resources: ["customresourcedefinitions"]
        verbs: ["create", "list", "watch", "delete"]
      - apiGroups: ["coordination.k8s.io"]
        resources: ["leases"]
        verbs: ["get", "watch", "list", "delete", "update", "create"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-csi-snapshotter-binding
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-controller-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: azuredisk-external-snapshotter-role
      apiGroup: rbac.authorization.k8s.io
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-external-resizer-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
    rules:
      - apiGroups: [""]
        resources: ["persistentvolumes"]
        verbs: ["get", "list", "watch", "update", "patch"]
      - apiGroups: [""]
        resources: ["persistentvolumeclaims"]
        verbs: ["get", "list", "watch"]
      - apiGroups: [""]
        resources: ["persistentvolumeclaims/status"]
        verbs: ["update", "patch"]
      - apiGroups: [""]
        resources: ["events"]
        verbs: ["list", "watch", "create", "update", "patch"]
      - apiGroups: ["coordination.k8s.io"]
        resources: ["leases"]
        verbs: ["get", "list", "watch", "create", "update", "patch"]
      - apiGroups: [""]
        resources: ["pods"]
        verbs: ["get", "list", "watch"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-csi-resizer-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-controller-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: azuredisk-external-resizer-role
      apiGroup: rbac.authorization.k8s.io
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: csi-azuredisk-controller-secret-role
    rules:
      - apiGroups: [""]
        resources: ["secrets"]
        verbs: ["get", "list"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: csi-azuredisk-controller-secret-binding
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-controller-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: csi-azuredisk-controller-secret-role
      apiGroup: rbac.authorization.k8s.io
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: csi-azuredisk-node-secret-role
    rules:
      - apiGroups: [""]
        resources: ["secrets"]
        verbs: ["get", "list"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: csi-azuredisk-node-secret-binding
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-node-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: csi-azuredisk-node-secret-role
      apiGroup: rbac.authorization.k8s.io
  - kind: DaemonSet
    apiVersion: apps/v1
    metadata:
      name: csi-azuredisk-node
      namespace: kube-system
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
    spec:
      selector:
        matchLabels:
          app: csi-azuredisk-node
      template:
        metadata:
          labels:
            app.kubernetes.io/name: azuredisk-csi-driver
            app.kubernetes.io/version: 1.4.0
            app: csi-azuredisk-node
        spec:
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
          serviceAccountName: csi-azuredisk-node-sa
          nodeSelector:
            kubernetes.io/os: linux
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: type
                        operator: NotIn
                        values:
                          - virtual-kubelet
          priorityClassName: system-node-critical
          tolerations:
            - operator: "Exists"
          containers:
            - name: liveness-probe
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
              image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.3.0
              args:
                - --csi-address=/csi/csi.sock
                - --probe-timeout=3s
                - --health-port=29603
                - --v=2
              resources:
                limits:
                  cpu: 100m
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: node-driver-registrar
              image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.2.0
              args:
                - --csi-address=$(ADDRESS)
                - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
                - --v=2
              lifecycle:
                preStop:
                  exec:
                    command: ["/bin/sh", "-c", "rm -rf /registration/disk.csi.azure.com-reg.sock /csi/csi.sock"]
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: DRIVER_REG_SOCK_PATH
                  value: /var/data/kubelet/plugins/disk.csi.azure.com/csi.sock
              volumeMounts:
                - name: socket-dir
                  mountPath: /csi
                - name: registration-dir
                  mountPath: /registration
              resources:
                limits:
                  cpu: 100m
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: azuredisk
              image: mcr.microsoft.com/k8s/csi/azuredisk-csi:v1.4.0
              args:
                - "--v=5"
                - "--endpoint=$(CSI_ENDPOINT)"
                - "--nodeid=$(KUBE_NODE_NAME)"
                - "--metrics-address=0.0.0.0:29605"
                - "--enable-perf-optimization=true"
              ports:
                - containerPort: 29603
                  name: healthz
                  protocol: TCP
                - containerPort: 29605
                  name: metrics
                  protocol: TCP
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /healthz
                  port: healthz
                initialDelaySeconds: 30
                timeoutSeconds: 10
                periodSeconds: 30
              env:
                - name: AZURE_CREDENTIAL_FILE
                  valueFrom:
                    configMapKeyRef:
                      name: azure-cred-file
                      key: path
                      optional: true
                - name: CSI_ENDPOINT
                  value: unix:///csi/csi.sock
                - name: KUBE_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
              imagePullPolicy: IfNotPresent
              securityContext:
                privileged: true
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
                - mountPath: /var/data/kubelet/
                  mountPropagation: Bidirectional
                  name: mountpoint-dir
                - mountPath: /etc/kubernetes/
                  name: azure-cred
                - mountPath: /var/lib/waagent/ManagedIdentity-Settings
                  readOnly: true
                  name: msi
                - mountPath: /dev
                  name: device-dir
                - mountPath: /sys/bus/scsi/devices
                  name: sys-devices-dir
                - mountPath: /sys/class/scsi_host/
                  name: scsi-host-dir
              resources:
                limits:
                  cpu: 200m
                  memory: 200Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
          volumes:
            - hostPath:
                path: /var/data/kubelet/plugins/disk.csi.azure.com
                type: DirectoryOrCreate
              name: socket-dir
            - hostPath:
                path: /var/data/kubelet/
                type: DirectoryOrCreate
              name: mountpoint-dir
            - hostPath:
                path: /var/data/kubelet/plugins_registry/
                type: DirectoryOrCreate
              name: registration-dir
            - hostPath:
                path: /etc/kubernetes/
                type: Directory
              name: azure-cred
            - hostPath:
                path: /var/lib/waagent/ManagedIdentity-Settings
              name: msi
            - hostPath:
                path: /dev
                type: Directory
              name: device-dir
            - hostPath:
                path: /sys/bus/scsi/devices
                type: Directory
              name: sys-devices-dir
            - hostPath:
                path: /sys/class/scsi_host/
                type: Directory
              name: scsi-host-dir
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: csi-azuredisk-controller
      namespace: kube-system
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.4.0
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: csi-azuredisk-controller
          app.kubernetes.io/name: azuredisk-csi-driver
      template:
        metadata:
          labels:
            app.kubernetes.io/name: azuredisk-csi-driver
            app.kubernetes.io/version: 1.4.0
            app: csi-azuredisk-controller
        spec:
          hostNetwork: true
          serviceAccountName: csi-azuredisk-controller-sa
          nodeSelector:
            kubernetes.io/os: linux
          priorityClassName: system-cluster-critical
          tolerations:
            - key: "node-role.kubernetes.io/master"
              operator: "Equal"
              value: "true"
              effect: "NoSchedule"
            - key: "node-role.kubernetes.io/controlplane"
              operator: "Equal"
              value: "true"
              effect: "NoSchedule"
          containers:
            - name: csi-provisioner
              image: mcr.microsoft.com/oss/kubernetes-csi/csi-provisioner:v2.1.1
              args:
                - "--feature-gates=Topology=true"
                - "--csi-address=$(ADDRESS)"
                - "--v=2"
                - "--timeout=15s"
                - "--leader-election"
                - "--worker-threads=40"
                - "--extra-create-metadata=true"
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
              resources:
                limits:
                  cpu: 100m
                  memory: 300Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: csi-attacher
              image: "mcr.microsoft.com/oss/kubernetes-csi/csi-attacher:v3.1.0"
              args:
                - "-v=2"
                - "-csi-address=$(ADDRESS)"
                - "-timeout=120s"
                - "-leader-election"
                - "-worker-threads=500"
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
              resources:
                limits:
                  cpu: 100m
                  memory: 400Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: csi-resizer
              image: "mcr.microsoft.com/oss/kubernetes-csi/csi-resizer:v1.1.0"
              args:
                - "-csi-address=$(ADDRESS)"
                - "-v=2"
                - "-leader-election"
                - '-handle-volume-inuse-error=true'
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              volumeMounts:
                - name: socket-dir
                  mountPath: /csi
              resources:
                limits:
                  cpu: 100m
                  memory: 300Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: liveness-probe
              image: "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.3.0"
              args:
                - --csi-address=/csi/csi.sock
                - --probe-timeout=3s
                - --health-port=29602
                - --v=2
              volumeMounts:
                - name: socket-dir
                  mountPath: /csi
              resources:
                limits:
                  cpu: 100m
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
            - name: azuredisk
              image: "mcr.microsoft.com/k8s/csi/azuredisk-csi:v1.4.0"
              args:
                - "--v=5"
                - "--endpoint=$(CSI_ENDPOINT)"
                - "--metrics-address=0.0.0.0:29604"
              # - "--disable-avset-nodes=true"
              ports:
                - containerPort: 29602
                  name: healthz
                  protocol: TCP
                - containerPort: 29604
                  name: metrics
                  protocol: TCP
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /healthz
                  port: healthz
                initialDelaySeconds: 30
                timeoutSeconds: 10
                periodSeconds: 30
              env:
                - name: AZURE_CREDENTIAL_FILE
                  valueFrom:
                    configMapKeyRef:
                      name: azure-cred-file
                      key: path
                      optional: true
                - name: CSI_ENDPOINT
                  value: unix:///csi/csi.sock
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
                - mountPath: /etc/kubernetes/
                  name: azure-cred
                - mountPath: /var/lib/waagent/ManagedIdentity-Settings
                  readOnly: true
                  name: msi
              resources:
                limits:
                  cpu: 200m
                  memory: 300Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
          volumes:
            - name: socket-dir
              emptyDir: {}
            - name: azure-cred
              hostPath:
                path: /etc/kubernetes/
                type: Directory
            - name: msi
              hostPath:
                path: /var/lib/waagent/ManagedIdentity-Settings
