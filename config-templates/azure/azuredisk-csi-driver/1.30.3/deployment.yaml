---
apiVersion: v1
kind: List
metadata:
  name: azuredisk-csi-driver
  namespace: kube-system
  annotations:
    version: 1.30.3
    revision: 1
items:
  - apiVersion: v1
    stringData:
      cloud-config: |
        {
          "cloud":"AzurePublicCloud",
          "tenantId": "{{{tenantId}}}",
          "subscriptionId": "{{{subscriptionId}}}",
          "aadClientId": "{{{aadClientId}}}",
          "aadClientSecret": "{{{aadClientSecret}}}",
          "resourceGroup": "{{{resourceGroup}}}",
          "location": "{{{location}}}",
          "vmType": "{{{vmType}}}",
          "securityGroupName": "{{{securityGroupName}}}",
          "vnetName": "{{{vnetName}}}",
          "useWorkloadIdentity": "{{{useWorkloadIdentity}}}",
          "workloadIdentityClientId": "{{{workloadIdentityClientId}}}",
          "workloadIdentityTenantId": "{{{workloadIdentityTenantId}}}",
          "enableOtelTracing": "{{{enableOtelTracing}}}",
          "otelServiceName": "{{{otelServiceName}}}",
          "otelExporterEndpoint": "{{{otelExporterEndpoint}}}",
          "useHostNetwork": "{{{useHostNetwork}}}"
        }
    kind: Secret
    metadata:
      name: azure-cloud-provider
      namespace: kube-system
    type: Opaque
  - apiVersion: storage.k8s.io/v1
    kind: CSIDriver
    metadata:
      name: disk.csi.azure.com
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
      annotations:
        csiDriver: "v1.30.3"
        snapshot: "v8.0.1"
    spec:
      attachRequired: true
      podInfoOnMount: false
      fsGroupPolicy: File
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: csi-azuredisk-controller-sa
      namespace: kube-system
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
        {{#useWorkloadIdentity}}
        azure.workload.identity/use: "true"
        {{/useWorkloadIdentity}}
      annotations:
        {{#workloadIdentityClientId}}
        azure.workload.identity/client-id: {{{workloadIdentityClientId}}}
        {{/workloadIdentityClientId}}
        {{#workloadIdentityTenantId}}
        azure.workload.identity/tenant-id: {{{workloadIdentityTenantId}}}
        {{/workloadIdentityTenantId}}
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: csi-azuredisk-node-sa
      namespace: kube-system
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
        {{#useWorkloadIdentity}}
        azure.workload.identity/use: "true"
        {{/useWorkloadIdentity}}
      annotations:
        {{#workloadIdentityClientId}}
        azure.workload.identity/client-id: {{{workloadIdentityClientId}}}
        {{/workloadIdentityClientId}}
        {{#workloadIdentityTenantId}}
        azure.workload.identity/tenant-id: {{{workloadIdentityTenantId}}}
        {{/workloadIdentityTenantId}}
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-external-provisioner-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    rules:
      - apiGroups: [""]
        resources: ["persistentvolumes"]
        verbs: ["get", "list", "watch", "create", "patch", "delete"]
      - apiGroups: [""]
        resources: ["persistentvolumeclaims"]
        verbs: ["get", "list", "watch", "update"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["storageclasses"]
        verbs: ["get", "list", "watch"]
      - apiGroups: [""]
        resources: ["events"]
        verbs: ["get", "list", "watch", "create", "update", "patch"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["csinodes"]
        verbs: ["get", "list", "watch"]
      - apiGroups: [""]
        resources: ["nodes"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshots"]
        verbs: ["get", "list"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshotcontents"]
        verbs: ["get", "list"]
      - apiGroups: ["coordination.k8s.io"]
        resources: ["leases"]
        verbs: ["get", "watch", "list", "delete", "update", "create", "patch"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-csi-provisioner-binding
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-controller-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: azuredisk-external-provisioner-role
      apiGroup: rbac.authorization.k8s.io
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-external-attacher-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    rules:
      - apiGroups: [""]
        resources: ["persistentvolumes"]
        verbs: ["get", "list", "watch", "update"]
      - apiGroups: [""]
        resources: ["nodes"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["csi.storage.k8s.io"]
        resources: ["csinodeinfos"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["volumeattachments"]
        verbs: ["get", "list", "watch", "update", "patch"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["volumeattachments/status"]
        verbs: ["get", "list", "watch", "update", "patch"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["volumeattributesclasses"]
        verbs: ["get"]
      - apiGroups: ["coordination.k8s.io"]
        resources: ["leases"]
        verbs: ["get", "watch", "list", "delete", "update", "create", "patch"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-csi-attacher-binding
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-controller-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: azuredisk-external-attacher-role
      apiGroup: rbac.authorization.k8s.io
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-external-snapshotter-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    rules:
      - apiGroups: [""]
        resources: ["events"]
        verbs: ["list", "watch", "create", "update", "patch"]
      - apiGroups: [""]
        resources: ["secrets"]
        verbs: ["get", "list"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshotclasses"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshotcontents"]
        verbs: ["create", "get", "list", "watch", "update", "delete", "patch"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshotcontents/status"]
        verbs: ["update", "patch"]
      - apiGroups: ["coordination.k8s.io"]
        resources: ["leases"]
        verbs: ["get", "watch", "list", "delete", "update", "create", "patch"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-csi-snapshotter-binding
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-controller-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: azuredisk-external-snapshotter-role
      apiGroup: rbac.authorization.k8s.io
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-external-resizer-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    rules:
      - apiGroups: [""]
        resources: ["persistentvolumes"]
        verbs: ["get", "list", "watch", "update", "patch"]
      - apiGroups: [""]
        resources: ["persistentvolumeclaims"]
        verbs: ["get", "list", "watch"]
      - apiGroups: [""]
        resources: ["persistentvolumeclaims/status"]
        verbs: ["update", "patch"]
      - apiGroups: [""]
        resources: ["events"]
        verbs: ["list", "watch", "create", "update", "patch"]
      - apiGroups: ["coordination.k8s.io"]
        resources: ["leases"]
        verbs: ["get", "watch", "list", "delete", "update", "create", "patch"]
      - apiGroups: [""]
        resources: ["pods"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["volumeattributesclasses"]
        verbs: ["get", "list", "watch"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: azuredisk-csi-resizer-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-controller-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: azuredisk-external-resizer-role
      apiGroup: rbac.authorization.k8s.io
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: csi-azuredisk-controller-secret-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    rules:
      - apiGroups: [""]
        resources: ["secrets"]
        verbs: ["get", "list"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: csi-azuredisk-controller-secret-binding
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-controller-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: csi-azuredisk-controller-secret-role
      apiGroup: rbac.authorization.k8s.io
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: csi-azuredisk-node-role
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    rules:
      - apiGroups: [""]
        resources: ["secrets"]
        verbs: ["get"]
      - apiGroups: [""]
        resources: ["nodes"]
        verbs: ["get", "patch"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["csinodes"]
        verbs: ["get"]
  - kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: csi-azuredisk-node-secret-binding
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    subjects:
      - kind: ServiceAccount
        name: csi-azuredisk-node-sa
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: csi-azuredisk-node-role
      apiGroup: rbac.authorization.k8s.io
  - kind: DaemonSet
    apiVersion: apps/v1
    metadata:
      name: csi-azuredisk-node
      namespace: kube-system
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    spec:
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 1
        type: RollingUpdate
      selector:
        matchLabels:
          app: csi-azuredisk-node
      template:
        metadata:
          labels:
            app.kubernetes.io/name: azuredisk-csi-driver
            app.kubernetes.io/version: 1.30.3
            app: csi-azuredisk-node
            {{#useWorkloadIdentity}}
            azure.workload.identity/use: "true"
            {{/useWorkloadIdentity}}
          annotations:
            autoUpdate: "AUTO-UPDATE-ENABLED"
        spec:
          hostNetwork: true
          dnsPolicy: Default
          serviceAccountName: csi-azuredisk-node-sa
          nodeSelector:
            kubernetes.io/os: linux
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: type
                    operator: NotIn
                    values:
                    - virtual-kubelet
          priorityClassName: system-node-critical
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - operator: Exists
          containers:
            - name: liveness-probe
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
              image: "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.0"
              args:
                - --csi-address=/csi/csi.sock
                - --probe-timeout=3s
                - --http-endpoint=localhost:29603
                - --v=2
              resources:
                limits:
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
              securityContext:
                capabilities:
                  drop:
                  - ALL
            - name: node-driver-registrar
              image: "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.12.0"
              args:
                - --csi-address=$(ADDRESS)
                - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
                - --v=2
              livenessProbe:
                exec:
                  command:
                    - /csi-node-driver-registrar
                    - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
                    - --mode=kubelet-registration-probe
                initialDelaySeconds: 30
                timeoutSeconds: 15
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: DRIVER_REG_SOCK_PATH
                  value: /var/data/kubelet/plugins/disk.csi.azure.com/csi.sock
              volumeMounts:
                - name: socket-dir
                  mountPath: /csi
                - name: registration-dir
                  mountPath: /registration
              resources:
                limits:
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
              securityContext:
                capabilities:
                  drop:
                  - ALL
            - name: azuredisk
              image: "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.3"
              args:
                - "--v=5"
                - "--endpoint=$(CSI_ENDPOINT)"
                - "--nodeid=$(KUBE_NODE_NAME)"
                - "--enable-perf-optimization=true"
                - "--drivername=disk.csi.azure.com"
                - "--volume-attach-limit=-1"
                - "--reserved-data-disk-slot-num=0"
                - "--cloud-config-secret-name=azure-cloud-provider"
                - "--cloud-config-secret-namespace=kube-system"
                - "--custom-user-agent="
                - "--user-agent-suffix=OSS-helm"
                - "--allow-empty-cloud-config=true"
                - "--support-zone=true"
                - "--get-node-info-from-labels=false"
                - "--get-nodeid-from-imds=false"
                {{#enableOtelTracing}}
                - "--enable-otel-tracing={{{enableOtelTracing}}}"
                {{/enableOtelTracing}}
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  host: localhost
                  path: /healthz
                  port: healthz
                initialDelaySeconds: 30
                timeoutSeconds: 10
                periodSeconds: 30
              env:
                - name: AZURE_CREDENTIAL_FILE
                  valueFrom:
                    configMapKeyRef:
                      name: azure-cred-file
                      key: path
                      optional: true
                - name: CSI_ENDPOINT
                  value: unix:///csi/csi.sock
                - name: KUBE_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: AZURE_GO_SDK_LOG_LEVEL
                  value:
                {{#enableOtelTracing}}
                - name: OTEL_SERVICE_NAME
                  value: {{{otelServiceName}}}
                - name: OTEL_EXPORTER_OTLP_ENDPOINT
                  value: {{{otelExporterEndpoint}}}
                {{/enableOtelTracing}}
              imagePullPolicy: IfNotPresent
              securityContext:
                privileged: true
                capabilities:
                  drop:
                  - ALL
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
                - mountPath: /var/data/kubelet/
                  mountPropagation: Bidirectional
                  name: mountpoint-dir
                - mountPath: /etc/kubernetes/
                  name: azure-cred
                - mountPath: /dev
                  name: device-dir
                - mountPath: /sys/bus/scsi/devices
                  name: sys-devices-dir
                - mountPath: /sys/class/
                  name: sys-class
              resources:
                limits:
                  memory: 200Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
          volumes:
            - hostPath:
                path: /var/data/kubelet/plugins/disk.csi.azure.com
                type: DirectoryOrCreate
              name: socket-dir
            - hostPath:
                path: /var/data/kubelet/
                type: DirectoryOrCreate
              name: mountpoint-dir
            - hostPath:
                path: /var/data/kubelet/plugins_registry/
                type: DirectoryOrCreate
              name: registration-dir
            - hostPath:
                path: /etc/kubernetes/
                type: DirectoryOrCreate
              name: azure-cred
            - hostPath:
                path: /dev
                type: Directory
              name: device-dir
            - hostPath:
                path: /sys/bus/scsi/devices
                type: Directory
              name: sys-devices-dir
            - hostPath:
                path: /sys/class/
                type: Directory
              name: sys-class
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: csi-azuredisk-controller
      namespace: kube-system
      labels:
        app.kubernetes.io/name: azuredisk-csi-driver
        app.kubernetes.io/version: 1.30.3
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: csi-azuredisk-controller
      template:
        metadata:
          labels:
            app.kubernetes.io/name: azuredisk-csi-driver
            app.kubernetes.io/version: v1.30.3
            app: csi-azuredisk-controller
          annotations:
            autoUpdate: "AUTO-UPDATE-ENABLED"
        spec:
          hostNetwork: true
          serviceAccountName: csi-azuredisk-controller-sa
          nodeSelector:
            kubernetes.io/os: linux
          priorityClassName: system-cluster-critical
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/master
              operator: Exists
            - effect: NoSchedule
              key: node-role.kubernetes.io/controlplane
              operator: Exists
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
              operator: Exists
          containers:
            - name: csi-provisioner
              image: "mcr.microsoft.com/oss/kubernetes-csi/csi-provisioner:v5.0.2"
              args:
                - "--feature-gates=Topology=true,HonorPVReclaimPolicy=true"
                - "--csi-address=$(ADDRESS)"
                - "--v=2"
                - "--timeout=30s"
                - "--leader-election"
                - "--leader-election-namespace=default"
                - "--worker-threads=50"
                - "--extra-create-metadata=true"
                - "--strict-topology=true"
                - "--kube-api-qps=50"
                - "--kube-api-burst=100"
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
              resources:
                limits:
                  memory: 500Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
              securityContext:
                capabilities:
                  drop:
                  - ALL
            - name: csi-attacher
              image: "mcr.microsoft.com/oss/kubernetes-csi/csi-attacher:v4.6.1"
              args:
                - "-v=2"
                - "-csi-address=$(ADDRESS)"
                - "-timeout=1200s"
                - "-leader-election"
                - "--leader-election-namespace=default"
                - "-worker-threads=500"
                - "-kube-api-qps=200"
                - "-kube-api-burst=400"
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              volumeMounts:
              - mountPath: /csi
                name: socket-dir
              resources:
                limits:
                  memory: 500Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
              securityContext:
                capabilities:
                  drop:
                  - ALL
            - name: csi-snapshotter
              image: "mcr.microsoft.com/oss/kubernetes-csi/csi-snapshotter:v8.0.1"
              args:
                - "-csi-address=$(ADDRESS)"
                - "-leader-election"
                - "--leader-election-namespace=default"
                - "-v=2"
                - "--timeout=1200s"
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              volumeMounts:
                - name: socket-dir
                  mountPath: /csi
              resources:
                limits:
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
              securityContext:
                capabilities:
                  drop:
                  - ALL
            - name: csi-resizer
              image: "mcr.microsoft.com/oss/kubernetes-csi/csi-resizer:v1.11.1"
              args:
                - "-csi-address=$(ADDRESS)"
                - "-v=2"
                - "-leader-election"
                - "--leader-election-namespace=default"
                - '-handle-volume-inuse-error=false'
                - '-feature-gates=RecoverVolumeExpansionFailure=true'
                - "-timeout=240s"
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
              volumeMounts:
                - name: socket-dir
                  mountPath: /csi
              resources:
                limits:
                  memory: 500Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
              securityContext:
                capabilities:
                  drop:
                  - ALL
            - name: liveness-probe
              image: "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.0"
              args:
                - --csi-address=/csi/csi.sock
                - --probe-timeout=3s
                - --health-port=29602
                - --v=2
                {{#useHostNetwork}}
                - --http-endpoint=localhost:29602
                {{/useHostNetwork}}
              volumeMounts:
                - name: socket-dir
                  mountPath: /csi
              resources:
                limits:
                  memory: 100Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
              securityContext:
                capabilities:
                  drop:
                  - ALL
            - name: azuredisk
              image: "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.3"
              args:
                - "--v=5"
                - "--endpoint=$(CSI_ENDPOINT)"
                - "--metrics-address=0.0.0.0:29604"
                - "--disable-avset-nodes=false"
                - "--vm-type="
                - "--drivername=disk.csi.azure.com"
                - "--cloud-config-secret-name=azure-cloud-provider"
                - "--cloud-config-secret-namespace=kube-system"
                - "--custom-user-agent="
                - "--user-agent-suffix=OSS-helm"
                - "--allow-empty-cloud-config=false"
                - "--vmss-cache-ttl-seconds=-1"
                - "--traffic-manager-port=7788"
                {{#enableOtelTracing}}
                - "--enable-otel-tracing={{{enableOtelTracing}}}"
                {{/enableOtelTracing}}
                - "--check-disk-lun-collision=true"
              ports:
                - containerPort: 29602
                  name: healthz
                  protocol: TCP
                - containerPort: 29604
                  name: metrics
                  protocol: TCP
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /healthz
                  port: healthz
                initialDelaySeconds: 30
                timeoutSeconds: 10
                periodSeconds: 30
              env:
                - name: AZURE_CREDENTIAL_FILE
                  valueFrom:
                    configMapKeyRef:
                      name: azure-cred-file
                      key: path
                      optional: true
                - name: CSI_ENDPOINT
                  value: unix:///csi/csi.sock
                - name: AZURE_GO_SDK_LOG_LEVEL
                  value:
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - mountPath: /csi
                  name: socket-dir
                - mountPath: /etc/kubernetes/
                  name: azure-cred
              resources:
                limits:
                  memory: 500Mi
                requests:
                  cpu: 10m
                  memory: 20Mi
              securityContext:
                capabilities:
                  drop:
                  - ALL
          volumes:
            - name: socket-dir
              emptyDir: {}
            - name: azure-cred
              hostPath:
                path: /etc/kubernetes/
                type: DirectoryOrCreate
