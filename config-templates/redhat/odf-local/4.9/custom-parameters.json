[
  {
    "description": "Set to 'true' if you want to automatically discover and use the storage volumes on your worker nodes. If set to `false` then you need to explicitly provide the OSD volume IDs",
    "displayname": "Automatic storage volume discovery",
    "name": "auto-discover-devices",
    "default": "false",
    "regex": "^(?:true|false)$",
    "min-length": 4,
    "max-length": 5,
    "supported-values": ["true", "false"],
    "type": "boolean",
    "required": "true"
  },
  {
    "description": "The local paths on your worker nodes to the volumes you want to use for the OSD pods. Please provide the disk IDs if 'auto-discover-devices' is set to 'false'",
    "displayname": "OSD volume IDs",
    "name": "osd-device-path",
    "place-holder": "/dev/sdc,/dev/sde",
    "required": "false",
    "mutable": "true"
  },
  {
    "description": "Number of storage devices to create per node. The default value is '1', which creates 1 device per node across 3 nodes. Increase by 1 for each additional set of 3 devices. For must use cases, leave the default value of '1'.",
    "displayname": "Number of OSD volumes",
    "name": "num-of-osd",
    "default": "1",
    "regex": "^[1-9]([0-9]?)$",
    "min-length": 1,
    "max-length": 2,
    "required": "true",
    "mutable": "true"
  },
  {
    "description": "A comma separated list of the worker node names where you want to deploy ODF. Leave this field blank to deploy ODF across all worker nodes in your cluster. The minimum number of worker nodes is 3. You can find your worker node names by running 'oc get nodes'.",
    "displayname": "Worker node names",
    "name": "worker-nodes",
    "required": "false",
    "mutable": "true"
  },
  {
    "description": "If you are upgrading an existing ODF installation, set to 'true'.",
    "displayname": "Upgrade",
    "name": "odf-upgrade",
    "default": "false",
    "regex": "^(?:true|false)$",
    "min-length": 4,
    "max-length": 5,
    "supported-values": ["true", "false"],
    "required": "true",
    "type": "boolean",
    "mutable": "true"
  },
  {
    "description": "The billing type you want to use. Choose from 'essentials' or 'advanced'.",
    "displayname": "Billing type",
    "name": "billing-type",
    "default": "advanced",
    "regex": "^(?:essentials|advanced)$",
    "min-length": 8,
    "max-length": 10,
    "supported-values": ["essentials", "advanced"],
    "required": "true"
  },
  {
    "description": "The IBM COS regional public endpoint.",
    "displayname": "IBM COS endpoint",
    "name": "ibm-cos-endpoint",
    "place-holder": "https://s3.us-east.cloud-object-storage.appdomain.cloud",
    "required": "false"
  },
  {
    "description": "The location constraint that you want to use when creating your COS bucket. For example: 'us-east-standard'.",
    "displayname": "IBM COS location constraint",
    "name": "ibm-cos-location",
    "place-holder": "us-east-standard",
    "required": "false"
  },
  {
    "description": "Your IBM COS HMAC access key ID .",
    "displayname": "Access key ID",
    "name": "ibm-cos-access-key",
    "category": "secret",
    "required": "false",
    "obfuscate": "true",
    "mutable": "true"
  },
  {
    "description": "Your IBM COS HMAC secret access key.",
    "displayname": "Secret access key",
    "name": "ibm-cos-secret-key",
    "category": "secret",
    "required": "false",
    "obfuscate": "true",
    "mutable": "true"
  },
  {
    "description": "Set to 'true' if you want to enable cluster-wide encryption.",
    "displayname": "Encryption enabled",
    "name": "cluster-encryption",
    "default": "false",
    "regex": "^(?:true|false)$",
    "min-length": 4,
    "max-length": 5,
    "supported-values": ["true", "false"],
    "type": "boolean",
    "required": "true"
  },
  {
    "description": "Your IAM API key.",
    "displayname": "IAM API key",
    "name": "iam-api-key",
    "category": "secret",
    "obfuscate": "true",
    "required": "true",
    "mutable": "true"
  },
  {
    "description": "Set to 'true' if you want to perform complete cleanup of ODF on assignment deletion",
    "displayname": "Perform Cleanup",
    "name": "perform-cleanup",
    "default": "false",
    "regex": "^(?:true|false)$",
    "min-length": 4,
    "max-length": 5,
    "supported-values": ["true", "false"],
    "required": "true",
    "type": "boolean",
    "mutable": "true"
  }
]
